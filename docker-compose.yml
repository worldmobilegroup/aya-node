services:
  alice:
    build: ./
    command: >
      /aya/target/release/aya-node --dev --tmp --alice --port 30333 --rpc-port 9944
      --unsafe-rpc-external
      --rpc-cors all --validator
    
    ports:
      - "30333:30333"
   
      - "9944:9944"
    networks:
      - aya_network

  bob:
    build: ./
    environment:
      - NODE_KEY=${NODE_KEY}
      - ALICE_IP=${ALICE_IP}
    command: >
      /aya/target/release/aya-node --dev --tmp --bob --port 30334 --rpc-port 9946
      --unsafe-rpc-external
      --rpc-cors all --validator --bootnodes /ip4/${ALICE_IP}/tcp/30333/p2p/${NODE_KEY}
    depends_on:
      - alice
    networks:
      - aya_network
    ports:
      - "30334:30334"
   
      - "9946:9946"

  scrolls:
    image: sylvaincormier/chain-follower:v0.1
    command: ["/usr/bin/aya_chain_follower", "daemon", "--config", "/app/daemon_conf.toml"]
    environment:
      - RUST_LOG=info
    volumes:
      - ./daemon_conf.toml:/app/daemon_conf.toml  
    ports:
      - "9615:9615"
      - "12347:12347"
      - "4123:4123"
    restart: unless-stopped
    networks:
      - aya_network
  

  cardano-node:
    image: cardanocommunity/cardano-node
    environment:
      - NETWORK=mainnet  # Change to testnet if applicable
    volumes:
      - ./data/cardano-node/db:/data/db
      - ./data/cardano-node/socket:/data/socket
      - ../cardano-node/configuration:/config  # Adjust this path according to where your config files are stored
    ports:
      - "3001:3001"
      - "12798:12798"  
    networks:
      - aya_network
    command: >
      cardano-node run
      --config /config/mainnet-config.json  # Adjust the config filename as necessary
      --topology /config/mainnet-topology.json  # Adjust the topology filename as necessary
      --database-path /data/db
      --socket-path /data/socket/node.socket
      --host-addr 0.0.0.0
      --port 3001

  


    

networks:
  aya_network:
    driver: bridge
    # ipam:
    #   config:
    #     - subnet: 172.20.0.0/16
    # driver_opts:
    #   com.docker.network.bridge.default_bridge: "true"
    #   com.docker.network.bridge.enable_icc: "true"
    #   com.docker.network.bridge.enable_ip_masquerade: "true"
    # options:
    #   com.docker.network.bridge.name: "docker1"


